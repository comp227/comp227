{"componentChunkName":"component---src-templates-content-template-js","path":"/part7/react_router","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>The exercises in this seventh part of the course differ a bit from the ones before.\nIn this and the next chapter, as usual, there are <a href=\"#exercises-71-73\">exercises related to the theory in the chapter</a>.</p>\n<p>In addition to the exercises in this and the next chapter,\nthere are a series of exercises in which we'll be revising what we've learned during the whole course by expanding the Watchlist application,\nwhich we worked on during parts 4 and 5.</p>\n<h3>Application navigation structure</h3>\n<p>This part will continue from where we left off in <a href=\"/part5\">part 5</a>.</p>\n<p>It is very common for web applications to have a navigation bar, which enables switching the view of the application.</p>\n<p>Our app could have a main page</p>\n<picture><img src=\"/static/3eac7600d443035ca3c69455b121458b/5a190/1ea.png\" alt=\"browser showing tasks app with home nav link\" srcset=\"/static/3eac7600d443035ca3c69455b121458b/772e8/1ea.png 200w,\n/static/3eac7600d443035ca3c69455b121458b/e17e5/1ea.png 400w,\n/static/3eac7600d443035ca3c69455b121458b/5a190/1ea.png 800w,\n/static/3eac7600d443035ca3c69455b121458b/47aef/1ea.png 1063w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>and separate pages for showing information on tasks and users:</p>\n<picture><img src=\"/static/9ec155a10a0c799001db600cb2207c37/5a190/2ea.png\" alt=\"browser showing tasks app with tasks nav link\" srcset=\"/static/9ec155a10a0c799001db600cb2207c37/772e8/2ea.png 200w,\n/static/9ec155a10a0c799001db600cb2207c37/e17e5/2ea.png 400w,\n/static/9ec155a10a0c799001db600cb2207c37/5a190/2ea.png 800w,\n/static/9ec155a10a0c799001db600cb2207c37/dd104/2ea.png 1064w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>In an <a href=\"/part0/fundamentals_of_web_apps#traditional-web-applications\">old school web app</a>,\nchanging the page shown by the application would be accomplished by the browser making an HTTP GET request to the server and rendering the HTML representing the view that was returned.</p>\n<p>In single-page apps, we are, in reality, always on the same page.\nThe Javascript code run by the browser <strong><em>creates an illusion of different \"pages\"</em></strong>.\nIf HTTP requests are made when switching views, they are only for fetching JSON-formatted data, which the new view might require for it to be shown.</p>\n<p>The navigation bar and an application containing multiple views are very easy to implement using React.</p>\n<p>Here is one way, which we will write into a <strong>new repository's <em>index.js</em></strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span>  <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Home</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token number\">227</span> Tasks App<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Tasks</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Tasks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Users</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Users<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>page<span class=\"token punctuation\">,</span> setPage<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'home'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">page</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setPage</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">content</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">===</span> <span class=\"token string\">'home'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">===</span> <span class=\"token string\">'tasks'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Tasks <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">===</span> <span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> padding <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    padding<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">toPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          home\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">toPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tasks'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          tasks\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">toPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          users\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n      <span class=\"token punctuation\">{</span><span class=\"token function\">content</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Each view is implemented as its own component.\nWe store the view component information in the application state called <code class=\"language-text\">page</code>.\nThis information tells us which component, representing a view, should be shown below the menu bar.</p>\n<p>However, this method is not ideal for a variety of reasons.\nAs we can see from the pictures, the address stays the same even though at times we are in different views.\nEach view should preferably have its own address, e.g. to make bookmarking possible.\nThe <strong><em>back</em></strong> button doesn't work as expected for our application either,\nmeaning that <em>back</em> doesn't move you to the previously displayed view of the application, but somewhere completely different.\nIf the application were to grow even bigger and we wanted to, for example, add separate views for each user and task,\nthen this self-made <strong>routing</strong>, which means the navigation management of the application, would get overly complicated.</p>\n<h3>React Router</h3>\n<p>Luckily, React has the <a href=\"https://reactrouter.com/\"><strong>React Router</strong></a> library\nwhich provides an excellent solution for managing navigation in a React application.</p>\n<p>Let's change the above application to use React Router.\nFirst, we install React Router with the command</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i react-router-dom</code></pre></div>\n<p>The routing provided by React Router is enabled by changing the application as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span>\n  Routes<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Link\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> padding <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    padding<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span><span class=\"token operator\">></span>tasks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>users<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Tasks <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>Task app<span class=\"token punctuation\">,</span> Department <span class=\"token keyword\">of</span> Computer Science <span class=\"token number\">2023</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Routing, or the conditional rendering of components <em>based on the URL</em> in the browser,\nis used by placing components as children of the <code class=\"language-text\">Router</code> component, meaning inside <code class=\"language-text\">Router</code> tags.</p>\n<p>Notice that, even though the component is referred to by the name <code class=\"language-text\">Router</code>,\nwe are talking about <a href=\"https://reactrouter.com/en/main/router-components/browser-router\">BrowserRouter</a>,\nbecause here the import happens by renaming the imported object:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span></span>  Routes<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Link\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span></code></pre></div>\n<p>According to the <a href=\"https://v5.reactrouter.com/web/api/BrowserRouter\">v5 docs</a>:</p>\n<blockquote>\n<p><code class=\"language-text\">BrowserRouter</code> is a <code class=\"language-text\">Router</code> that uses the HTML5 history API (pushState, replaceState and the popState event)\nto keep your UI in sync with the URL.</p>\n</blockquote>\n<p>Normally the browser loads a new page when the URL in the address bar changes.\nHowever, with the help of the <a href=\"https://css-tricks.com/using-the-html5-history-api/\">HTML5 history API</a>,\n<code class=\"language-text\">BrowserRouter</code> enables us to use the URL in the address bar of the browser for internal \"routing\" in a React application.\nSo, <strong><em>even if the URL in the address bar changes, the content of the page is only manipulated using Javascript, and the browser will not load new content from the server</em></strong>.\nUsing the back and forward actions, as well as making bookmarks, is still logical like on a traditional web page.</p>\n<p>Inside the router, we define <em>links</em> that modify the address bar with the help of the <a href=\"https://reactrouter.com/en/main/components/link\"><code class=\"language-text\">Link</code></a> component.\nFor example,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span><span class=\"token operator\">></span>tasks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span></code></pre></div>\n<p>creates a link in the application with the text <em><code class=\"language-text\">tasks</code></em>, which when clicked changes the URL in the address bar to <strong><em>/tasks</em></strong>.</p>\n<p>Components rendered based on the URL of the browser are defined with the help of the component <a href=\"https://reactrouter.com/en/main/route/route\"><code class=\"language-text\">Route</code></a>.\nFor example,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Tasks <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>defines that, if the browser address is <strong><em>/tasks</em></strong>, we render the <code class=\"language-text\">Tasks</code> component.</p>\n<p>We wrap the components to be rendered based on the URL with a <a href=\"https://reactrouter.com/en/main/components/routes\"><code class=\"language-text\">Routes</code></a> component</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Tasks <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span></code></pre></div>\n<p>The Routes works by rendering the first component whose <em>path</em> matches the URL in the browser's address bar.</p>\n<h3>Parameterized route</h3>\n<p>Let's examine a slightly modified version from the previous example.\nThe complete code for this example can be found <a href=\"https://github.com/comp227/misc/blob/main/router-app-v1.js\">here</a>.</p>\n<p>The application now contains five different views whose display is controlled by the router.\nIn addition to the components from the previous example (<em><code class=\"language-text\">Home</code></em>, <em><code class=\"language-text\">Tasks</code></em> and <em><code class=\"language-text\">Users</code></em>),\nwe have <code class=\"language-text\">Login</code> representing the login view and <code class=\"language-text\">Task</code> representing the view of a single task.</p>\n<p><code class=\"language-text\">Home</code> and <code class=\"language-text\">Users</code> are unchanged from the previous exercise.\n<code class=\"language-text\">Tasks</code> is a bit more complicated.\nIt renders the list of tasks passed to it as props in such a way that the name of each task is clickable.</p>\n<picture><img src=\"/static/9cc8290ada83c7d64cfa5605f65ac086/5a190/3ea.png\" alt=\"tasks app showing tasks are clickable\" srcset=\"/static/9cc8290ada83c7d64cfa5605f65ac086/772e8/3ea.png 200w,\n/static/9cc8290ada83c7d64cfa5605f65ac086/e17e5/3ea.png 400w,\n/static/9cc8290ada83c7d64cfa5605f65ac086/5a190/3ea.png 800w,\n/static/9cc8290ada83c7d64cfa5605f65ac086/187fa/3ea.png 1194w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>The ability to click a name is implemented with the component <code class=\"language-text\">Link</code>,\nand clicking the name of a task whose <code class=\"language-text\">id</code> is <code class=\"language-text\">3</code> would trigger an event that changes the address of the browser into <strong><em>tasks/3</em></strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Tasks</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Tasks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task</span> <span class=\"token operator\">=></span>\n        <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/tasks/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>task<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span></span>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>We define parameterized URLs in the routing in <code class=\"language-text\">App</code> component as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks/:id\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Task tasks<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Tasks tasks<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>   \n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>user <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Navigate replace to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Login onLogin<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>login<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>      \n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span></code></pre></div>\n<p>We define the route rendering a specific task \"express style\" by marking the parameter with a colon - <code class=\"language-text\">:id</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks/:id\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Task tasks<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>When a browser navigates to the URL for a specific task, for example, <strong><em>/tasks/3</em></strong>, we render the <code class=\"language-text\">Task</code> component:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">  useParams</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Task</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> tasks <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">useParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>id</span>  <span class=\"token keyword\">const</span> task <span class=\"token operator\">=</span> tasks<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span> <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>strong<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>important <span class=\"token operator\">?</span> <span class=\"token string\">'important'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>strong<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">Task</code> component receives all of the tasks as props <code class=\"language-text\">tasks</code>, and it can access the URL parameter (the id of the task to be displayed)\nwith the <a href=\"https://reactrouter.com/en/main/hooks/use-params\">useParams</a> function of the React Router.</p>\n<h3>useNavigate</h3>\n<p>We have also implemented a simple login function in our application.\nIf a user is logged in, information about a logged-in user is saved to the <code class=\"language-text\">user</code> field of the state of the <code class=\"language-text\">App</code> component.</p>\n<p>The option to navigate to the <code class=\"language-text\">Login</code> view is rendered conditionally in the menu.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span><span class=\"token operator\">></span>tasks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>users<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span>user</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span> logged <span class=\"token keyword\">in</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span></code></pre></div>\n<p>So if the user is already logged in, instead of displaying the link <code class=\"language-text\">Login</code>, we show the username of the user:</p>\n<picture><img src=\"/static/96eb0caaf2727ba31331b39f4259eeef/5a190/4a.png\" alt=\"browser tasks app showing username logged in\" srcset=\"/static/96eb0caaf2727ba31331b39f4259eeef/772e8/4a.png 200w,\n/static/96eb0caaf2727ba31331b39f4259eeef/e17e5/4a.png 400w,\n/static/96eb0caaf2727ba31331b39f4259eeef/5a190/4a.png 800w,\n/static/96eb0caaf2727ba31331b39f4259eeef/c1b63/4a.png 1200w,\n/static/96eb0caaf2727ba31331b39f4259eeef/b4cdf/4a.png 1417w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>The code of the component handling the login functionality is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">  useNavigate</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Login</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> navigate <span class=\"token operator\">=</span> <span class=\"token function\">useNavigate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    props<span class=\"token punctuation\">.</span><span class=\"token function\">onLogin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'powercat'</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          username<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>input <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          password<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">'password'</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>What is interesting about this component is the use of the <a href=\"https://reactrouter.com/en/main/hooks/use-navigate\"><code class=\"language-text\">useNavigate</code></a> function of the React Router.\nWith this function, the browser's URL can be changed programmatically.</p>\n<p>With the user logs in, we call <code class=\"language-text\">navigate(&#39;/&#39;)</code> which causes the browser's URL to change to <code class=\"language-text\">/</code> and the application renders the corresponding component <code class=\"language-text\">Home</code>.</p>\n<p>Both <a href=\"https://reactrouter.com/en/main/hooks/use-params\"><code class=\"language-text\">useParams</code></a> and <a href=\"https://reactrouter.com/en/main/hooks/use-navigate\"><code class=\"language-text\">useNavigate</code></a> are <strong><em>hook functions</em></strong>,\njust like <code class=\"language-text\">useState</code> and <code class=\"language-text\">useEffect</code> which we have used many times now.\nAs you remember from <a href=\"/part1/a_more_complex_state_debugging_react_apps/#rules-of-hooks\">part 1, there are some rules</a> to using hook functions.\nVite has been configured to warn you if you break these rules, for example, <em>by calling a hook function from a conditional statement</em>.</p>\n<h3>redirect</h3>\n<p>There is one more interesting detail about the <code class=\"language-text\">Users</code> route:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>user <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Navigate replace to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>If a user <em>isn't</em> logged in, the <code class=\"language-text\">Users</code> component is not rendered.\nInstead, the user is <strong><em>redirected</em></strong> using the component <a href=\"https://reactrouter.com/en/main/components/navigate\"><code class=\"language-text\">Navigate</code></a> to the login view:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Navigate replace to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>In reality, it would perhaps be better to not even show links in the navigation bar requiring login if the user is not logged into the application.</p>\n<p>Here is the <code class=\"language-text\">App</code> component in its entirety:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>tasks<span class=\"token punctuation\">,</span> setTasks<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> setUser<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> \n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">login</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> padding <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    padding<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span><span class=\"token operator\">></span>tasks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>users<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>user\n            <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span> logged <span class=\"token keyword\">in</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span>\n            <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span><span class=\"token operator\">></span>login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n        <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks/:id\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Task tasks<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  \n          <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Tasks tasks<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>   \n          <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>user <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Navigate replace to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Login onLogin<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>login<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>      \n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>      \n      <span class=\"token operator\">&lt;</span>footer<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>Task app<span class=\"token punctuation\">,</span> Department <span class=\"token keyword\">of</span> Computer Science <span class=\"token number\">2023</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>footer<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We define an element common for modern web apps called <em><code class=\"language-text\">footer</code></em> (notice the lowercase), which defines the part at the bottom of the screen, outside of the <code class=\"language-text\">Router</code>,\nso that it is shown regardless of the component shown in the routed part of the application.</p>\n<h3>Parameterized route revisited</h3>\n<p>Our application has a flaw.\nThe <code class=\"language-text\">Task</code> component receives all of the tasks, even though it only displays the one whose <code class=\"language-text\">id</code> matches the url (<em>/tasks/id</em>):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Task</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> tasks <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> \n  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">useParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>id\n  <span class=\"token keyword\">const</span> task <span class=\"token operator\">=</span> tasks<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span> <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong><em>Would it be possible to modify the application so that the <code class=\"language-text\">Task</code> component receives only the task that it should display?</em></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Task</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> task <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>strong<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">.</span>important <span class=\"token operator\">?</span> <span class=\"token string\">'important'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>strong<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>One way to do this would be to use React Router's <a href=\"https://reactrouter.com/en/v6.3.0/api#usematch\"><code class=\"language-text\">useMatch</code></a> hook\nto figure out the id of the task to be displayed in the <code class=\"language-text\">App</code> component.</p>\n<p>However, it is not possible to use the <code class=\"language-text\">useMatch</code> hook in the component which defines the routed part of the application.\nLet's change it then and *move the <code class=\"language-text\">Router</code> components <strong>outside of the <code class=\"language-text\">App</code>*</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The <code class=\"language-text\">App</code> component becomes:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"gatsby-highlight-code-line\">  useMatch</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> match <span class=\"token operator\">=</span> <span class=\"token function\">useMatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks/:id'</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> task <span class=\"token operator\">=</span> match </span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">?</span> tasks<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task</span> <span class=\"token operator\">=></span> task<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>padding<span class=\"token punctuation\">}</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token comment\">// ...</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks/:id\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Task task<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>task<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></span>        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/tasks\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Tasks tasks<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>   \n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>user <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Navigate replace to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Login onLogin<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>login<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>      \n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>   \n\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>Task app<span class=\"token punctuation\">,</span> Department <span class=\"token keyword\">of</span> Computer Science <span class=\"token number\">2023</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>em<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>  </code></pre></div>\n<p>Now, with the Task also in its ideal state, everytime the component is rendered, or practically every time the browser's URL changes, this command is executed:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> match <span class=\"token operator\">=</span> <span class=\"token function\">useMatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks/:id'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>If the URL matches <strong><em>/tasks/:id</em></strong>, the match variable will contain an object from which we can access the parameterized part of the path,\nthe id of the task to be displayed, and we can then fetch the correct task to display.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> task <span class=\"token operator\">=</span> match \n  <span class=\"token operator\">?</span> tasks<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">task</span> <span class=\"token operator\">=></span> task<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span></code></pre></div>\n<p>The completed code can be found <a href=\"https://github.com/comp227/misc/blob/main/router-app-v2.js\">here</a>.</p>\n</div>\n<div class=\"tasks\">\n<h3>Exercises 7.1-7.3</h3>\n<p>Let's work again with jokes, but we will start from scratch.\nThis time, we will add images to our application, so this can easily turn into storing memes, which we'll do.\nAlthough we are mostly storing memes, we will refer to them as jokes.\nThis assignment is strictly for educational purposes, as such the url for the images may stop working if sites detect we are repeatedly taking their images.\nBecause the picture portion is merely cosmetic, we will leave it in to make the assignment feel a tad bit more fun.\nHowever, we will <strong>from now on refer to both <em>memes</em> and <em>jokes</em> as <code class=\"language-text\">jokes</code></strong>.</p>\n<p>To start, please visit <a href=\"http://go.djosv.com/227lab7-1\">http://go.djosv.com/227lab7-1</a>\nWe will use the repo there as the starting point for the exercises.</p>\n<p>The application starts the usual way, but first, you need to install the dependencies of the application:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i\n<span class=\"token function\">npm</span> run dev</code></pre></div>\n<h4>7.1: routed jokes, Step 1</h4>\n<p>Add React Router to the application so that by clicking links in the <code class=\"language-text\">Menu</code> component the view can be changed.</p>\n<p>At the root of the application, meaning the path <code class=\"language-text\">/</code>, shows the list of jokes:</p>\n<picture><img src=\"/static/91b4aa1d8386d9a027b4db87dd89c171/5a190/40.png\" alt=\"browser at baseURL showing jokes and footer\" srcset=\"/static/91b4aa1d8386d9a027b4db87dd89c171/772e8/40.png 200w,\n/static/91b4aa1d8386d9a027b4db87dd89c171/e17e5/40.png 400w,\n/static/91b4aa1d8386d9a027b4db87dd89c171/5a190/40.png 800w,\n/static/91b4aa1d8386d9a027b4db87dd89c171/c1b63/40.png 1200w,\n/static/91b4aa1d8386d9a027b4db87dd89c171/11a8f/40.png 1272w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>The <code class=\"language-text\">Footer</code> component should always be visible at the bottom.</p>\n<p>The creation of a new joke should happen e.g. in the path <em>create</em>:</p>\n<picture><img src=\"/static/d2179426c8c2eeb768d95693b66997b2/5a190/41.png\" alt=\"browser jokes /create shows create form\" srcset=\"/static/d2179426c8c2eeb768d95693b66997b2/772e8/41.png 200w,\n/static/d2179426c8c2eeb768d95693b66997b2/e17e5/41.png 400w,\n/static/d2179426c8c2eeb768d95693b66997b2/5a190/41.png 800w,\n/static/d2179426c8c2eeb768d95693b66997b2/c1b63/41.png 1200w,\n/static/d2179426c8c2eeb768d95693b66997b2/fbfd6/41.png 1357w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h4>7.2: routed jokes, Step 2</h4>\n<p>Implement a view for showing a single joke:</p>\n<picture><img src=\"/static/6fe23f099bb4e4c11f652010d510062f/5a190/42.png\" alt=\"browser /jokes/number showing single joke\" srcset=\"/static/6fe23f099bb4e4c11f652010d510062f/772e8/42.png 200w,\n/static/6fe23f099bb4e4c11f652010d510062f/e17e5/42.png 400w,\n/static/6fe23f099bb4e4c11f652010d510062f/5a190/42.png 800w,\n/static/6fe23f099bb4e4c11f652010d510062f/c1b63/42.png 1200w,\n/static/6fe23f099bb4e4c11f652010d510062f/ce0a7/42.png 1590w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Navigating to the page showing the single joke is done by clicking the name of that joke:</p>\n<picture><img src=\"/static/77464c0d4dbc38c625b0675b53729de1/5a190/43.png\" alt=\"browser showing previous link that was clicked\" srcset=\"/static/77464c0d4dbc38c625b0675b53729de1/772e8/43.png 200w,\n/static/77464c0d4dbc38c625b0675b53729de1/e17e5/43.png 400w,\n/static/77464c0d4dbc38c625b0675b53729de1/5a190/43.png 800w,\n/static/77464c0d4dbc38c625b0675b53729de1/c1b63/43.png 1200w,\n/static/77464c0d4dbc38c625b0675b53729de1/cd138/43.png 1220w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h4>7.3: routed jokes, Step 3</h4>\n<p>The default functionality of the creation form is quite confusing because nothing seems to be happening after creating a new joke using the form.</p>\n<p>Improve the functionality such that after creating a new joke the application transitions automatically to showing the view for all jokes\n<strong>and</strong> the user is shown a notification informing them of this successful creation for the next five seconds:</p>\n<picture><img src=\"/static/911bbcf83e4f73115a98d0a951213cfd/5a190/44.png\" alt=\"browser jokes showing success message for adding joke\" srcset=\"/static/911bbcf83e4f73115a98d0a951213cfd/772e8/44.png 200w,\n/static/911bbcf83e4f73115a98d0a951213cfd/e17e5/44.png 400w,\n/static/911bbcf83e4f73115a98d0a951213cfd/5a190/44.png 800w,\n/static/911bbcf83e4f73115a98d0a951213cfd/c1b63/44.png 1200w,\n/static/911bbcf83e4f73115a98d0a951213cfd/a3767/44.png 1210w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/2184b1c35920cfc7a09e10660dea04eb/part-7.svg"},"part":7,"letter":"a","lang":"en"}}},"pageContext":{"part":7,"letter":"a","lang":"en"}}}