{"componentChunkName":"component---src-templates-content-template-js","path":"/part7/webpack","result":{"data":{"markdownRemark":{"html":"<div class=\"content\">\n<p>In the early days, React was somewhat famous for being very difficult to configure the tools required for application development.\nTo make the situation easier, <a href=\"https://github.com/facebookincubator/create-react-app\"><strong><em>Create React App</em></strong></a> was developed, which eliminated configuration-related problems.\n<a href=\"https://vitejs.dev/\"><strong><em>Vite</em></strong></a>, which is also used in the course, has recently replaced Create React App in new applications.</p>\n<p>Both Vite and Create React App use <strong>bundlers</strong> to do the actual work.\nWe will now familiarize ourselves with the bundler called <a href=\"https://webpack.js.org/\"><strong>Webpack</strong></a> used by Create React App.\nWebpack was by far the most popular bundler for years.\nRecently, however, there have been several new generation bundlers such as <a href=\"https://esbuild.github.io/\"><strong>esbuild</strong></a>, which is used by Vite.\nIt is significantly faster and easier to use esbuild instead of Webpack.\nHowever, e.g. esbuild still lacks some useful features (such as hot reload of the code in the browser), so next we will get to know the old ruler of bundlers, Webpack.</p>\n<h3>Bundling</h3>\n<p>We have implemented our applications by dividing our code into separate modules that have been <strong><em>imported</em></strong> to places that require them.\nEven though ES6 modules are defined in the ECMAScript standard, <em>older browsers do not know how to handle code that is divided into modules</em>.</p>\n<p>For this reason, code that is divided into modules must be <strong>bundled</strong> for browsers,\nmeaning that <strong><em>all of the source code files are transformed into a single file</em></strong> that contains all of the application code.\nWhen we deployed our React frontend to production in <a href=\"/part3/deploying_app_to_internet\">part 3</a>,\nwe performed the bundling of our application with the <code class=\"language-text\">npm run build</code> command.\nUnder the hood, the npm script bundles the source, which produces the following collection of files in the <em>dist</em> directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">.</span>\n├── assets\n│   ├── index-d526a0c5.css\n│   ├── index-e92ae01e.js\n│   └── react-35ef61ed.svg\n├── index.html\n└── vite.svg</code></pre></div>\n<p>The <em>index.html</em> file located at the root of the <em>dist</em> directory is the \"main file\" of the application which loads the bundled JavaScript file with a <em><code class=\"language-text\">script</code></em> tag:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!doctype html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>image/svg+xml<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/vite.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Vite + React<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/assets/index-e92ae01e.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/assets/index-d526a0c5.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>As we can see from the example application that was created with Vite,\nthe build script also bundles the application's CSS files into a single <em>/static/css/main.d526a0c5.css</em> file.</p>\n<p>In practice, bundling is done so that we define an entry point for the application, which typically is the <em>index.js</em> file.\nWhen webpack bundles the code, it includes</p>\n<ul>\n<li>all of the code that the entry point imports</li>\n<li>the code that <em>its imports</em> import</li>\n<li>and so on.</li>\n</ul>\n<p>Since part of the imported files are packages like React, Redux, and Axios,\nthe bundled JavaScript file will also contain the contents of each of these libraries.</p>\n<blockquote>\n<p>The old way of dividing the application's code into multiple files was based on the fact that\nthe <em>index.html</em> file loaded all of the separate JavaScript files of the application with the help of <code class=\"language-text\">script</code> tags.\nThis resulted in decreased performance, since the loading of each separate file results in some overhead.\nFor this reason, these days the preferred method is to <em>bundle the code into a single file</em>.</p>\n</blockquote>\n<h4>Creating a webpack configuration</h4>\n<p>Next, we will create a suitable webpack configuration for a React application by hand from scratch.</p>\n<p>Let's <strong><em>create a new project</em></strong> with the following subdirectories (<em>build</em> and <em>src</em>) and files:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">├── build\n├── package.json\n├── src\n│   └── index.js\n└── webpack.config.js</code></pre></div>\n<p>The contents of the <em>package.json</em> file can e.g. be the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-part7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practicing webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let's install webpack with the command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -D webpack webpack-cli</code></pre></div>\n<p>We define the functionality of webpack in the <em>webpack.config.js</em> file, which we initialize with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<blockquote>\n<p><strong>Pertinent:</strong> it would be possible to make the definition directly as an object instead of a function:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span>  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>An object will suffice in many situations, but we will later need certain features that require us to define <code class=\"language-text\">config</code> as a function.</p>\n</blockquote>\n<p>Next, define a new npm script called <em><code class=\"language-text\">build</code></em> that will execute the bundling with webpack:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ...</span>\n<span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>Let's add more code to <em>src/index.js</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When we execute the <code class=\"language-text\">npm run build</code> command, our application code will be bundled by webpack.\nThe operation will produce a new <em>main.js</em> file that is added under the <em>build</em> directory:</p>\n<picture><img src=\"/static/b0d2c2b169398ea26f144c204ab623a5/5a190/19x.png\" alt=\"terminal output webpack npm run build\" srcset=\"/static/b0d2c2b169398ea26f144c204ab623a5/772e8/19x.png 200w,\n/static/b0d2c2b169398ea26f144c204ab623a5/e17e5/19x.png 400w,\n/static/b0d2c2b169398ea26f144c204ab623a5/5a190/19x.png 800w,\n/static/b0d2c2b169398ea26f144c204ab623a5/11b93/19x.png 1124w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>The file contains a lot of stuff that looks quite interesting.\nWe can also see the code we wrote in the middle of the file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"const hello = name => {\\r\\n    console.log(`hello ${name}`)\\r\\n}\\n\\n//# sourceURL=webpack://webpack-part7/./src/index.js?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Let's add an <em>App.js</em> file under the <em>src</em> directory with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Let's import and use the <em>App</em> module in the <em>index.js</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>When we bundle the application again with the <code class=\"language-text\">npm run build</code> command, we notice that webpack has acknowledged both files:</p>\n<picture><img src=\"/static/de4573a0ee7c63ffdc57fa972d9139b7/5a190/20x.png\" alt=\"terminal output showing webpack generated two files\" srcset=\"/static/de4573a0ee7c63ffdc57fa972d9139b7/772e8/20x.png 200w,\n/static/de4573a0ee7c63ffdc57fa972d9139b7/e17e5/20x.png 400w,\n/static/de4573a0ee7c63ffdc57fa972d9139b7/5a190/20x.png 800w,\n/static/de4573a0ee7c63ffdc57fa972d9139b7/84bf8/20x.png 1162w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Our application code can be found in the middle of our bundle file (<em>main.js</em>) in a rather obscure format:</p>\n<picture><img src=\"/static/b2f0ea8f87c3e1add2f78b9638aec46c/5a190/20z.png\" alt=\"terminal output showing our minified code\" srcset=\"/static/b2f0ea8f87c3e1add2f78b9638aec46c/772e8/20z.png 200w,\n/static/b2f0ea8f87c3e1add2f78b9638aec46c/e17e5/20z.png 400w,\n/static/b2f0ea8f87c3e1add2f78b9638aec46c/5a190/20z.png 800w,\n/static/b2f0ea8f87c3e1add2f78b9638aec46c/e751c/20z.png 1123w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>Configuration file</h3>\n<p>Let's take a closer look at the contents of our current <em>webpack.config.js</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>The configuration file has been written in JavaScript and the function returning the configuration object is exported using Node's <code class=\"language-text\">module</code> syntax.</p>\n<p>Our minimal configuration definition helps us to decipher it.\nThe <a href=\"https://webpack.js.org/concepts/#entry\"><em><code class=\"language-text\">entry</code></em></a> property of the configuration object specifies the file that will serve as the entry point for bundling the application.</p>\n<p>The <a href=\"https://webpack.js.org/concepts/#output\"><em><code class=\"language-text\">output</code></em></a> property defines the location where the bundled code will be stored.\nThe target directory must be defined as an <strong><em>absolute path</em></strong>,\nwhich is easy to create with the <a href=\"https://nodejs.org/docs/latest-v8.x/api/path.html#path_path_resolve_paths\"><strong><code class=\"language-text\">path.resolve</code></strong></a> method.\nWe also use <a href=\"https://nodejs.org/docs/latest/api/globals.html#globals_dirname\"><strong><code class=\"language-text\">__dirname</code></strong></a>\nwhich is a global variable in Node that stores the path to the current directory.</p>\n<h3>Bundling React</h3>\n<p>Next, let's transform our application into a minimal React application.\nLet's install the required libraries:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i react react-dom</code></pre></div>\n<p>And let's turn our application into a React application by adding the familiar definitions in the <em>index.js</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>We will also make the following changes to the <em>App.js</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span> <span class=\"token comment\">// will need this in all component files</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      hey webpack\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>We also need the <em>build/index.html</em> file.\nThis file will serve as the \"main page\" of our application that will load our bundled JavaScript code with a <em><code class=\"language-text\">script</code></em> tag:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>React App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>When we bundle our application, we run into the following problem:</p>\n<picture><img src=\"/static/ea5bdcb5320604da296fb7c054c121c2/5a190/21x.png\" alt=\"webpack terminal failed loader needed\" srcset=\"/static/ea5bdcb5320604da296fb7c054c121c2/772e8/21x.png 200w,\n/static/ea5bdcb5320604da296fb7c054c121c2/e17e5/21x.png 400w,\n/static/ea5bdcb5320604da296fb7c054c121c2/5a190/21x.png 800w,\n/static/ea5bdcb5320604da296fb7c054c121c2/c1b63/21x.png 1200w,\n/static/ea5bdcb5320604da296fb7c054c121c2/29007/21x.png 1600w,\n/static/ea5bdcb5320604da296fb7c054c121c2/b8bf8/21x.png 1728w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<h3>Loaders</h3>\n<p>The error message from webpack states that we may need an appropriate <strong><em>loader</em></strong> to bundle the <em>App.js</em> file correctly.\nBy default, webpack only knows how to deal with plain JavaScript.\nAlthough we may have become unaware of it, we are using <a href=\"https://facebook.github.io/jsx/\">JSX</a> for rendering our views in React.\nTo illustrate this, the <strong><em>following code is not regular JavaScript</em></strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      hey webpack\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The syntax used above comes from JSX and it provides us with an alternative way of defining a React element for an HTML <em><code class=\"language-text\">div</code></em> tag.</p>\n<p>We can use <a href=\"https://webpack.js.org/concepts/loaders/\"><strong>loaders</strong></a> to inform webpack of the files that need to be processed before they are bundled.</p>\n<p>Let's configure a loader to our application that transforms the JSX code into regular JavaScript:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">          test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">          loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">            presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>Loaders are defined under the <code class=\"language-text\">module</code> property in the <code class=\"language-text\">rules</code> array.</p>\n<p>The definition of a single loader consists of three parts:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <em><code class=\"language-text\">test</code></em> property specifies that the loader is for files that have names ending with <strong><em>.js</em></strong>.\nThe <em><code class=\"language-text\">loader</code></em> property specifies that the processing for those files will be done with <a href=\"https://github.com/babel/babel-loader\">babel-loader</a>.\nThe <em><code class=\"language-text\">options</code></em> property is used for specifying parameters for the loader, which configure its functionality.</p>\n<p>Let's install the loader and its required packages as a <strong>development dependency</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -D @babel/core babel-loader @babel/preset-react</code></pre></div>\n<p>Bundling the application will now succeed.</p>\n<p>If we make some changes to the <code class=\"language-text\">App</code> component and take a look at the bundled code, we notice that the bundled version of the component looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> react__WEBPACK_IMPORTED_MODULE_0___default<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"hey webpack\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As we can see from the example above, the React elements that were written in JSX are now created with regular JavaScript\nby using React's <a href=\"https://react.dev/reference/react/createElement\">createElement</a> function.</p>\n<p>You can test the bundled application by opening the <em>build/index.html</em> file with the <strong><em>open file</em></strong> functionality of your browser:</p>\n<picture><img src=\"/static/3162db181ce4b4c34f8d67906df3a8bb/5a190/22.png\" alt=\"browser hello webpack\" srcset=\"/static/3162db181ce4b4c34f8d67906df3a8bb/772e8/22.png 200w,\n/static/3162db181ce4b4c34f8d67906df3a8bb/e17e5/22.png 400w,\n/static/3162db181ce4b4c34f8d67906df3a8bb/5a190/22.png 800w,\n/static/3162db181ce4b4c34f8d67906df3a8bb/c1b63/22.png 1200w,\n/static/3162db181ce4b4c34f8d67906df3a8bb/536c7/22.png 1480w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>It's worth noting that if the bundled application's source code uses <code class=\"language-text\">async</code>/<code class=\"language-text\">await</code>, the browser will not render anything on some browsers.\n<a href=\"https://stackoverflow.com/questions/33527653/babel-6-regeneratorruntime-is-not-defined\">Googling the error message in the console</a> will shed some light on the issue.\nWith the <a href=\"https://babeljs.io/docs/en/babel-polyfill/\">previous solution</a> being deprecated we now have to install two more missing dependencies,\nthat is <a href=\"https://www.npmjs.com/package/core-js\">core-js</a> and <a href=\"https://www.npmjs.com/package/regenerator-runtime\">regenerator-runtime</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i core-js regenerator-runtime</code></pre></div>\n<p>You need to import those dependencies at the top of the <em>index.js</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'core-js/stable/index.js'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'regenerator-runtime/runtime.js'</span></code></pre></div>\n<p>We have configured almost everything for React development.</p>\n<h3>Transpilers</h3>\n<p>The process of transforming code from one form of JavaScript to another is called <a href=\"https://en.wiktionary.org/wiki/transpile\"><strong>transpiling</strong></a>.\nThe general definition of the term is to compile source code by transforming it from one language to another.</p>\n<p>By using the configuration from the previous section,\nwe are <strong><em>transpiling</em></strong> the code containing JSX into regular JavaScript with the help of <a href=\"https://babeljs.io/\"><em>babel</em></a>,\nwhich is currently the most popular tool for the job.</p>\n<p>As mentioned in part 1, most browsers do not support the latest features that were introduced in ES6 and ES7,\nand for this reason, the code is usually transpiled to a version of JavaScript that implements the ES5 standard.</p>\n<p>The transpilation process that is executed by Babel is defined with <strong>plugins</strong>.\nIn practice, most developers use ready-made <a href=\"https://babeljs.io/docs/plugins/\">presets</a> that are groups of pre-configured plugins.</p>\n<p>Currently, we are using the <a href=\"https://babeljs.io/docs/plugins/preset-react/\">@babel/preset-react</a> preset for transpiling the source code of our application:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let's add the <a href=\"https://babeljs.io/docs/plugins/preset-env/\">@babel/preset-env</a>\nplugin that contains everything needed to take code using all of the latest features\nand transpile it to code that is compatible with the ES5 standard:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n  loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let's install the preset with the command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -D @babel/preset-env</code></pre></div>\n<p>When we transpile the code, it gets transformed into old-school JavaScript.\nThe definition of the transformed <code class=\"language-text\">App</code> component looks something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token keyword\">return</span> <span class=\"token function\">react_default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hey webpack'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As we can see, variables are declared with the <code class=\"language-text\">var</code> keyword as ES5 JavaScript does not understand the <code class=\"language-text\">const</code> keyword.\nArrow functions are also not used, which is why the function definition used the <code class=\"language-text\">function</code> keyword.</p>\n<h3>CSS</h3>\n<p>Let's add some CSS to our application.\nLet's create a new <em>src/index.css</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #cdf1e5<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then let's use the style in the <code class=\"language-text\">App</code> component:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hey webpack\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And we import the style in the <em>index.js</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span></code></pre></div>\n<p>This will cause the transpilation process to break:</p>\n<picture><img src=\"/static/1a37e8b10dea55f162533748d00375bd/5a190/23x.png\" alt=\"webpack failure missing loader for css/style\" srcset=\"/static/1a37e8b10dea55f162533748d00375bd/772e8/23x.png 200w,\n/static/1a37e8b10dea55f162533748d00375bd/e17e5/23x.png 400w,\n/static/1a37e8b10dea55f162533748d00375bd/5a190/23x.png 800w,\n/static/1a37e8b10dea55f162533748d00375bd/c1b63/23x.png 1200w,\n/static/1a37e8b10dea55f162533748d00375bd/c4451/23x.png 1450w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>When using CSS, we have to use the <a href=\"https://webpack.js.org/loaders/css-loader/\"><strong>css</strong></a> and <a href=\"https://webpack.js.org/loaders/style-loader/\"><strong>style</strong></a> loaders:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      test<span class=\"token operator\">:</span> <span class=\"token regex\">/\\.css$/</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The job of the <a href=\"https://webpack.js.org/loaders/css-loader/\"><em>css loader</em></a> is to load the <em>CSS</em> files\nand the job of the <a href=\"https://webpack.js.org/loaders/style-loader/\"><em>style loader</em></a>\nis to generate and inject a <em><code class=\"language-text\">style</code></em> element that contains all of the styles of the application.</p>\n<p>With this configuration, the *CSS definitions are included in the <strong>main.js</strong> file of the application<em>.\nFor this reason, there is no need to separately import the *CSS</em> styles in the main <em>index.html</em> file of the application.</p>\n<p>If needed, the application's CSS can also be generated into its own separate file\nby using the <a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin\">mini-css-extract-plugin</a>.</p>\n<p>Once we install the loaders:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -D style-loader css-loader</code></pre></div>\n<p>The bundling will succeed again and the application gets new styles.</p>\n<h3>Webpack-dev-server</h3>\n<p>The current configuration makes it possible to develop our application but the workflow is bad (so bad it almost resembles the development workflow of Java).\n<em>Every time we make a change to the code, we have to bundle it and refresh the browser to test the code</em> 🤦.</p>\n<p>The <a href=\"https://webpack.js.org/guides/development/#using-webpack-dev-server\">webpack-dev-server</a> offers a solution to our problems.\nLet's install it with the command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i -D webpack-dev-server</code></pre></div>\n<p>Let's define an npm script for starting the dev server:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --mode=development\"</span></span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let's also add a new <code class=\"language-text\">devServer</code> property to the configuration object in the <em>webpack.config.js</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">static</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The <code class=\"language-text\">npm start</code> command will now start the dev-server at port 3000, meaning that our application will be available by visiting <a href=\"http://localhost:3000\">http://localhost:3000</a> in the browser.\nWhen we make changes to the code, the browser will automatically refresh the page.</p>\n<p>The process for updating the code is fast.\nWhen we use the dev-server, the code is not bundled the usual way into the <em>main.js</em> file.\nThe result of the bundling exists only in memory.</p>\n<p>Let's extend the code by changing the definition of the <code class=\"language-text\">App</code> component as shown below:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hey webpack <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        press\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>The application works nicely and the development workflow is quite smooth.</p>\n<h3>Source maps</h3>\n<p>Let's extract the click handler into its own function and store the previous value of the counter in its own <code class=\"language-text\">values</code> state:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">setValues</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hey webpack <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span>        press\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The application no longer works and the console will display the following error:</p>\n<picture><img src=\"/static/17a76b64dbabcbd3b8afd3424c1420f8/5a190/25.png\" alt=\"devtools console cannot concat on undefined in handleClick\" srcset=\"/static/17a76b64dbabcbd3b8afd3424c1420f8/772e8/25.png 200w,\n/static/17a76b64dbabcbd3b8afd3424c1420f8/e17e5/25.png 400w,\n/static/17a76b64dbabcbd3b8afd3424c1420f8/5a190/25.png 800w,\n/static/17a76b64dbabcbd3b8afd3424c1420f8/c1b63/25.png 1200w,\n/static/17a76b64dbabcbd3b8afd3424c1420f8/3ceac/25.png 1456w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>We know that the error is in the <code class=\"language-text\">handleClick</code> method, but if the application was any larger the error message would be quite difficult to track down:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">App.js:27 Uncaught TypeError: Cannot <span class=\"token builtin class-name\">read</span> properties of undefined <span class=\"token punctuation\">(</span>reading <span class=\"token string\">'concat'</span><span class=\"token punctuation\">)</span>\n    at handleClick <span class=\"token punctuation\">(</span>App.js:27:22<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The location of the error indicated in the message does not match the actual location of the error in our source code.\nIf we click the error message, we notice that the displayed source code does not resemble our application code:</p>\n<picture><img src=\"/static/b42d425f339af37cb2db80062dcf63e1/5a190/26.png\" alt=\"devtools source does not show our source code\" srcset=\"/static/b42d425f339af37cb2db80062dcf63e1/772e8/26.png 200w,\n/static/b42d425f339af37cb2db80062dcf63e1/e17e5/26.png 400w,\n/static/b42d425f339af37cb2db80062dcf63e1/5a190/26.png 800w,\n/static/b42d425f339af37cb2db80062dcf63e1/c1b63/26.png 1200w,\n/static/b42d425f339af37cb2db80062dcf63e1/ce92a/26.png 1459w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>We prefer to see our actual source code instead.</p>\n<p>Luckily, fixing the error message in this respect is quite easy.\nWe will ask webpack to generate a so-called <a href=\"https://webpack.js.org/configuration/devtool/\"><strong>source map</strong></a> for the bundle,\nwhich makes it possible to <strong>*map errors</strong> that occur during the execution of the bundle to the corresponding part in the original source code*.</p>\n<p>The source map can be generated by adding a new <code class=\"language-text\">devtool</code> property in <em>webpack.config.js</em> with the value <code class=\"language-text\">&#39;source-map&#39;</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span></span>  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Webpack has to be restarted when we make changes to its configuration.\nIt is also possible to make webpack watch for changes made to itself but we will not do that this time.</p>\n<p>The error message is now a lot better</p>\n<picture><img src=\"/static/e7505563f388e05d5ffc8250ad773662/5a190/27.png\" alt=\"devtools console showing concat error at different line\" srcset=\"/static/e7505563f388e05d5ffc8250ad773662/772e8/27.png 200w,\n/static/e7505563f388e05d5ffc8250ad773662/e17e5/27.png 400w,\n/static/e7505563f388e05d5ffc8250ad773662/5a190/27.png 800w,\n/static/e7505563f388e05d5ffc8250ad773662/d56e1/27.png 1130w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>since it refers to the code we wrote:</p>\n<picture><img src=\"/static/58e1f77c0c5d90a49eea8493b8a00ca7/5a190/27eb.png\" alt=\"devtools source showing our actual code with values.concat\" srcset=\"/static/58e1f77c0c5d90a49eea8493b8a00ca7/772e8/27eb.png 200w,\n/static/58e1f77c0c5d90a49eea8493b8a00ca7/e17e5/27eb.png 400w,\n/static/58e1f77c0c5d90a49eea8493b8a00ca7/5a190/27eb.png 800w,\n/static/58e1f77c0c5d90a49eea8493b8a00ca7/c1b63/27eb.png 1200w,\n/static/58e1f77c0c5d90a49eea8493b8a00ca7/daed9/27eb.png 1426w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Generating the source map also makes it possible to use the Chrome debugger:</p>\n<picture><img src=\"/static/fb0c61e95935136d38f0476bd14234e5/5a190/28.png\" alt=\"devtools debugger paused just before offending line\" srcset=\"/static/fb0c61e95935136d38f0476bd14234e5/772e8/28.png 200w,\n/static/fb0c61e95935136d38f0476bd14234e5/e17e5/28.png 400w,\n/static/fb0c61e95935136d38f0476bd14234e5/5a190/28.png 800w,\n/static/fb0c61e95935136d38f0476bd14234e5/c1b63/28.png 1200w,\n/static/fb0c61e95935136d38f0476bd14234e5/07a9c/28.png 1440w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>Let's fix the bug by initializing the state of <code class=\"language-text\">values</code> as an empty array:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Minifying the code</h3>\n<p>When we deploy the application to production, we are using the <em>main.js</em> code bundle that is generated by webpack.\nThe size of the <em>main.js</em> file for me is 2000891 bytes even though our application only contains a few lines of our code.\nThe large file size is because the bundle also contains the source code for the entire React library.\nThe size of the bundled code matters since the browser has to load the code when the application is first used.\nWith high-speed internet connections, 2000891 bytes (1.9MB) is not an issue,\nbut if we were to keep adding more external dependencies, loading speeds could become an issue, particularly for mobile users.</p>\n<blockquote>\n<p><em>Or for those of us whose connection still feels like it's a 56k modem.</em> 😏</p>\n</blockquote>\n<p>If we inspect the contents of the bundle file, we notice that it could be greatly optimized in terms of file size by removing all of the comments.\nThere's no point in manually optimizing these files, as there are many existing tools for the job.</p>\n<p>The optimization process for JavaScript files is called <strong>minification</strong>.\nOne of the leading tools intended for this purpose is <a href=\"http://lisperator.net/uglifyjs/\">UglifyJS</a>.</p>\n<p>Starting from version 4 of webpack, the minification plugin does not require additional configuration to be used.\nIt is enough to modify the npm script in the <em>package.json</em> file to specify that webpack will execute the bundling of the code in <strong>production</strong> mode:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-part7\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practising webpack\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=production\"</span><span class=\"token punctuation\">,</span></span>    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --mode=development\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When we bundle the application again, the size of the resulting <em>main.js</em> decreases substantially:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> -l build/main.js\n-rw-r--r--  <span class=\"token number\">1</span> powercat <span class=\"token number\">197609</span> <span class=\"token number\">323677</span> Feb  <span class=\"token number\">5</span> <span class=\"token number\">15</span>:58 build/main.js</code></pre></div>\n<p>The output of the minification process resembles old-school C code; all of the comments and even unnecessary whitespace\nand newline characters have been removed, and variable names have been replaced with a single character.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span>useState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>o<span class=\"token operator\">=</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span>useState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span>o<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>className<span class=\"token operator\">:</span><span class=\"token string\">\"container\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hey webpack\"</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"br\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span><span class=\"token string\">\" clicks  \"</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"press\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Development and production configuration</h3>\n<p>Next, let's add a backend to our application by repurposing the now-familiar task application backend.</p>\n<p>Let's store the following content in the <em>db.json</em> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Wash the dishes\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b8481bb01f9cb00ccb4a9\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"important\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Catch up with a family member\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5a3b920a61e8c8d3f484bdd0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Our goal is to configure the application with webpack in such a way that, when used locally,\nthe application uses a json-server available in port 3001 as its backend.\nFeel free to <a href=\"/part2/getting_data_from_server\">go back and review the steps necessary to start that server</a>.</p>\n<p>The bundled file will then be configured to use the backend available at the <a href=\"https://comp227-osvaldo-lab3.onrender.com/api/tasks\">https://comp227-osvaldo-lab3.onrender.com/api/tasks</a> URL.</p>\n<p>We will leave it to you to install <strong><em>axios</em></strong>, start the json-server, and then make the necessary changes to the application.\nFor the sake of changing things up, we will fetch the tasks from the backend with our <a href=\"/part7/custom_hooks\">custom hook</a> called <code class=\"language-text\">useTasks</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useTasks</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>tasks<span class=\"token punctuation\">,</span> setTasks<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function\">setTasks</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> tasks</span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://comp227-osvaldo-lab3.onrender.com/api/tasks'</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> tasks <span class=\"token operator\">=</span> <span class=\"token function\">useTasks</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setValues</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hey webpack <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>press<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span> tasks on server <span class=\"token operator\">-</span> <span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>The address of the backend server is currently hardcoded in the application code.\nHow can we change the address in a controlled fashion to point to the production backend server when the code is bundled for production?</p>\n<p>Webpack's configuration function has two parameters, <code class=\"language-text\">env</code> and <code class=\"language-text\">argv</code>.\nWe can use the latter in <em>webpack.config.js</em> to find out the <code class=\"language-text\">mode</code> defined in the npm script.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">env<span class=\"token punctuation\">,</span> argv</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'argv.mode:'</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>Now we can set Webpack to work differently depending on whether the application's <strong><code class=\"language-text\">mode</code></strong> (operating environment), is set to <em>production</em> or <em>development</em>.</p>\n<p>We can also use webpack's <a href=\"https://webpack.js.org/plugins/define-plugin/\">DefinePlugin</a>\nfor defining <strong><em>global default constants</em></strong> that can be used in the bundled code.\nLet's define a new global constant <code class=\"language-text\">BACKEND_URL</code> that gets a different value depending on the environment that the code is being bundled for:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">env<span class=\"token punctuation\">,</span> argv</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'argv'</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">)</span>\n\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> backend_url <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">?</span> <span class=\"token string\">'https://comp227-osvaldo-lab3.onrender.com/api/tasks'</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3001/tasks'</span></span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n    output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">static</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      compress<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n    module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token constant\">BACKEND_URL</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>backend_url<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">]</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</code></pre></div>\n<p>The global constant is used in the following way in the code:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>counter<span class=\"token punctuation\">,</span> setCounter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">,</span> setValues<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> tasks <span class=\"token operator\">=</span> <span class=\"token function\">useTasks</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BACKEND_URL</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n      hey webpack <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>counter<span class=\"token punctuation\">}</span> clicks <span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span> <span class=\"token operator\">></span>press<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>tasks<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span> tasks on server <span class=\"token operator\">-</span> <span class=\"token punctuation\">{</span><span class=\"token constant\">BACKEND_URL</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></span>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If the configuration for development and production differs a lot,\nit may be a good idea to <a href=\"https://webpack.js.org/guides/production/\">separate the configuration</a> of the two into their own files.</p>\n<p>Now, if the application is started with the command <code class=\"language-text\">npm start</code> in development mode, it fetches the tasks from the address <a href=\"http://localhost:3001/tasks\">http://localhost:3001/tasks</a>.\nThe version bundled with the command <code class=\"language-text\">npm run build</code> uses the external address <a href=\"https://comp227-osvaldo-lab3.onrender.com/api/tasks\">https://comp227-osvaldo-lab3.onrender.com/api/tasks</a> to retrieve the list of tasks.</p>\n<p>We can inspect the bundled production version of the application locally by executing the following command *from the <strong>build</strong> directory*:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx static-server</code></pre></div>\n<p>Doing this allows us to view the production version.\nBy default, the bundled application will be available at <a href=\"http://localhost:9080\">http://localhost:9080</a>.</p>\n<h3>Polyfill</h3>\n<p>Our application is finished and works with all relatively recent versions of modern browsers, except for Internet Explorer.\nThe reason for this is that, because of <strong><em>axios</em></strong>,\nour code uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promises</a>,\nand no existing version of IE supports them:</p>\n<picture><img src=\"/static/1216d9e09020d95a217e29357b2492a5/5a190/29.png\" alt=\"browser compatibility chart highlighting how bad internet explorer is\" srcset=\"/static/1216d9e09020d95a217e29357b2492a5/772e8/29.png 200w,\n/static/1216d9e09020d95a217e29357b2492a5/e17e5/29.png 400w,\n/static/1216d9e09020d95a217e29357b2492a5/5a190/29.png 800w,\n/static/1216d9e09020d95a217e29357b2492a5/c1b63/29.png 1200w,\n/static/1216d9e09020d95a217e29357b2492a5/29007/29.png 1600w,\n/static/1216d9e09020d95a217e29357b2492a5/8d7fa/29.png 1813w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>There are many other things in the standard that IE does not support.\nSomething as harmless as the\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">find method</a>\nof JavaScript arrays exceeds the capabilities of IE:</p>\n<picture><img src=\"/static/2c5e2e216473083c0d0f017675d5f32b/5a190/30.png\" alt=\"browser compatibility chart showing IE does not support find method\" srcset=\"/static/2c5e2e216473083c0d0f017675d5f32b/772e8/30.png 200w,\n/static/2c5e2e216473083c0d0f017675d5f32b/e17e5/30.png 400w,\n/static/2c5e2e216473083c0d0f017675d5f32b/5a190/30.png 800w,\n/static/2c5e2e216473083c0d0f017675d5f32b/c1b63/30.png 1200w,\n/static/2c5e2e216473083c0d0f017675d5f32b/29007/30.png 1600w,\n/static/2c5e2e216473083c0d0f017675d5f32b/11d70/30.png 1802w\" sizes=\"(max-width: 800px) 100vw, 800px\"></picture>\n<p>While we may not really care to support IE,\nthere may be other situations where it is not enough to transpile the code,\nas transpilation simply transforms the code from a newer version of JavaScript to an older one with wider browser support.\nIE understands Promises syntactically but it never implemented their functionality.\nThe <code class=\"language-text\">find</code> property of arrays in IE is simply <code class=\"language-text\">undefined</code>.</p>\n<p>If we want the application to be IE-compatible, we need to add a <a href=\"https://remysharp.com/2010/10/08/what-is-a-polyfill\">polyfill</a>,\nwhich is code that adds the missing functionality to older browsers.</p>\n<p>Polyfills can be added with the help of <a href=\"https://babeljs.io/docs/usage/polyfill/\">webpack and Babel</a> or by installing one of many existing polyfill libraries.</p>\n<p>The polyfill provided by the <a href=\"https://www.npmjs.com/package/promise-polyfill\">promise-polyfill</a> library is easy to use.\nWe simply have to add the following to our existing application code:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PromisePolyfill <span class=\"token keyword\">from</span> <span class=\"token string\">'promise-polyfill'</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>Promise<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>Promise <span class=\"token operator\">=</span> PromisePolyfill\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If the global <code class=\"language-text\">Promise</code> object does not exist, meaning that the browser does not support Promises, the polyfilled Promise is stored in the global variable.\nIf the polyfilled Promise is implemented well enough, the rest of the code should work without issues.</p>\n<p>One exhaustive list of existing polyfills can be found <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills\">here</a>.</p>\n<p>The browser compatibility of different APIs can be checked by visiting <a href=\"https://caniuse.com\">https://caniuse.com</a> or <a href=\"https://developer.mozilla.org/en-US/\">Mozilla's website</a>.</p>\n</div>","frontmatter":{"mainImage":{"publicURL":"/static/2184b1c35920cfc7a09e10660dea04eb/part-7.svg"},"part":7,"letter":"d","lang":"en"}}},"pageContext":{"part":7,"letter":"d","lang":"en"}}}